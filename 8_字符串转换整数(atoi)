class Solution {//参考第七题的int型溢出判断
public:
    int myAtoi(string str) {//将字符串str转换成整数result
        
        if(str.empty()) return 0;//str为空字符串"\0"
        
        int first_notblank;//首个非空格字符在str中的下标
        int result=0;
        
        //找出首个非空格字符
        for(first_notblank=0; first_notblank<str.size(); first_notblank++)
            if(str[first_notblank]!=' ')//注意区分空字符''和空格字符' ' ：空字符的ASCII码为0,用作字符串结束符'\0'; 空格字符的ASCII码为32
                break;
        
        //排除各种特殊情况
        if(first_notblank==(str.size()+1)) return 0;//字符串只包含空格字符
        else if((str[first_notblank]=='+'||str[first_notblank]=='-')&&(str[first_notblank+1]<48||str[first_notblank+1]>57)) return 0;//首个非空格字符为‘+’或‘-’，且后一个字符为非数字字符
        else if((str[first_notblank]<48||str[first_notblank]>57)&&(str[first_notblank]!='+')&&(str[first_notblank]!='-')) return 0;//首个非空格字符为非数字字符，且不是‘+’和‘-’
        
        int i;//i起始指向首个数字字符
        int positive;//result的符号
        if(str[first_notblank]=='+')
        {
            positive=1;
            i=first_notblank+1;
        }
        else if(str[first_notblank]>=48&&str[first_notblank]<=57)
        {
            positive=1;
            i=first_notblank;
        }
        else if(str[first_notblank]=='-')
        {
            positive=-1;
            i=first_notblank+1;
        }

        
        while(str[i]>=48&&str[i]<=57)
        {
            //先溢出判断
            if(result>(INT_MAX/10)||(result==(INT_MAX/10)&&((str[i]-48)*positive>7))) return INT_MAX;
            if(result<(INT_MIN/10)||(result==(INT_MIN/10)&&((str[i]-48)*positive<-8))) return INT_MIN;
            
            result=result*10+(str[i]-48)*positive;//因为str[i]是字符型整数，不带符号，所以要把符号单独处理
            i++;
        }
            
        return result;

        
    }
};
